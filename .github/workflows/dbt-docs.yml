name: Generate and Deploy DBT Docs

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  generate-and-deploy-docs:
    runs-on: ubuntu-latest
    environment: Production
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        sudo apt-get install -y openssh-client

    - name: Setup SSH key
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        BASTION_HOST: ${{ vars.BASTION_HOST }}
      run: | 
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        # Just disable strict host checking instead of using keyscan
        echo "StrictHostKeyChecking no" >> ~/.ssh/config

    - name: Setup SSH tunnel to bastion server
      env:
        BASTION_HOST: ${{ vars.BASTION_HOST }}
        BASTION_USER: ${{ vars.BASTION_USER }}
        DB_HOST: ${{ vars.DB_HOST }}
      run: |
        ssh -N -L 5432:$DB_HOST:5432 $BASTION_USER@$BASTION_HOST &
        # Added GH-actions IPs to AWS security group
        # Add health check to ensure tunnel is up
        sleep 5
        nc -zv localhost 5432

    - name: Set DBT Profiles
      env: 
        DB_NAME: ${{ vars.DB_NAME }}
        DB_USER: ${{ vars.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: |
        mkdir -p ~/.dbt
        cat << EOF > ~/.dbt/profiles.yml
        dbt_poc:
          outputs:
            prod:
              type: postgres
              dbname: $DB_NAME
              host: localhost
              user: $DB_USER
              pass: $DB_PASSWORD
              port: 5432
              schema: dbt
              threads: 4
          target: prod
        EOF
        test -f ~/.dbt/profiles.yml || exit 1

    - name: Run DBT Debug
      run: |
        cd dbt_poc
        dbt debug --profiles-dir ~/.dbt
    
    - name: Generate DBT docs
      run: |
        cd dbt_poc
        dbt deps --profiles-dir ~/.dbt
        dbt docs generate --profiles-dir ~/.dbt
        
    - name: Copy docs to docs directory
      run: |
        rm -rf docs/*
        ls -la dbt_poc/target/
        cp -f dbt_poc/target/catalog.json docs/
        cp -f dbt_poc/target/manifest.json docs/
        cp -f dbt_poc/target/graph.gpickle docs/
        cp -f dbt_poc/target/index.html docs/
        
    - name: Commit and push if changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add docs/
        git commit -m "Auto-update DBT documentation" || echo "No changes to commit"
        git push

  trigger-cloudflare-deploy:
    needs: generate-and-deploy-docs
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Cloudflare Pages deployment
        run: |
          curl -X POST "${{ secrets.CLOUDFLARE_DEPLOY_HOOK }}"